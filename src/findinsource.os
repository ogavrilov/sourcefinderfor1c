#Использовать logos

Перем Лог;
Перем ВременныйКаталог;
Перем ФайлРезультатаПроцесса;
Перем ИдентификаторПроцесса;
Перем КоллекцияСтрокПоиска;
Перем КоллекцияФайловДляАнализа;
Перем ДанныеКорректны;
Перем ОбщиеМетоды;

Процедура ПриСозданииОбъекта(НастройкиВыполнения = Неопределено)
	// обработка настроек
	Если НастройкиВыполнения = Неопределено Тогда
		Если АргументыКоманднойСтроки.Количество() > 0 Тогда
			ФайлНастроекВыполнения = АргументыКоманднойСтроки[0];
		Иначе
			ФайлНастроекВыполнения = СтрЗаменить(ТекущийСценарий().Источник, ".os", ".json");
		КонецЕсли;
		Если НайтиФайлы(ФайлНастроекВыполнения).Количество() > 0 Тогда
			НастройкиВыполнения = ОбщиеМетоды.ПрочитатьФайлJSON(ФайлНастроекВыполнения);
		КонецЕсли;
	КонецЕсли;
	УстановитьНастройкиВыполнения(НастройкиВыполнения);
КонецПроцедуры

Процедура УстановитьНастройкиВыполнения(НастройкиВыполнения, ИменаНастроек = Неопределено) Экспорт
	Если ИменаНастроек = Неопределено Тогда
		ИменаНастроек = "ВременныйКаталог, ИдентификаторПроцесса, КоллекцияСтрокПоиска, КоллекцияФайловДляАнализа, ФайлРезультатаПроцесса, Лог";
	КонецЕсли;
	СтруктураИменНастроек = Новый Структура(ИменаНастроек);
	СтруктураНастроек = Новый Структура;
	Для Каждого ЭлементСтруктурыИменНастроек Из СтруктураИменНастроек Цикл
		Выполнить(ЭлементСтруктурыИменНастроек.Ключ + " = НастройкиВыполнения.Получить(ЭлементСтруктурыИменНастроек.Ключ);");
	КонецЦикла;
КонецПроцедуры

Процедура Инициализация() Экспорт
	// ИдентификаторПроцесса
	Если Не ЗначениеЗаполнено(ИдентификаторПроцесса) Тогда
		ИдентификаторПроцесса = Лев(Строка(Новый УникальныйИдентификатор()), 8);
	КонецЕсли;
	// Временный каталог
	Если Не ЗначениеЗаполнено(ВременныйКаталог) Тогда
		ВременныйКаталог = ТекущийСценарий().Каталог + "/" + ИдентификаторПроцесса;
	КонецЕсли;
	Если НайтиФайлы(ВременныйКаталог).Количество() = 0 Тогда
		СоздатьКаталог(ВременныйКаталог);
	КонецЕсли;
	// Лог
	Если Лог = Неопределено Тогда
		Лог = Логирование.ПолучитьЛог("oscript.app.findinsource");
		Лог.УстановитьРаскладку(ОбщиеМетоды);
	КонецЕсли;
	
	// проверка параметров
	ДанныеКорректны = Истина;
	Если ТипЗнч(КоллекцияСтрокПоиска) <> Тип("Массив") ИЛИ КоллекцияСтрокПоиска.Количество() = 0 Тогда
		ДанныеКорректны = Ложь;
		Лог.КритичнаяОшибка("Параметр ""КоллекцияСтрокПоиска"" отсутствует, не является массивом или пуст.");
	КонецЕсли;
	Если ТипЗнч(КоллекцияФайловДляАнализа) <> Тип("Массив") ИЛИ КоллекцияФайловДляАнализа.Количество() = 0 Тогда
		ДанныеКорректны = Ложь;
		Лог.КритичнаяОшибка("Параметр ""КоллекцияФайловДляАнализа"" отсутствует, не является массивом или пуст.");
	КонецЕсли;

	Если Не ДанныеКорректны Тогда
		Лог.КритичнаяОшибка("Операции завершены.");
	КонецЕсли;
КонецПроцедуры

Функция ПоискВФайлахПоШаблону() Экспорт
	
	// подготовка структуры данных результата
	Результат = Новый Соответствие;

	//
	СоответствиеРегулярныхВыражений = Новый Соответствие;
	Для Каждого СтрокаПоиска Из КоллекцияСтрокПоиска Цикл
		СоответствиеРегулярныхВыражений.Вставить(СтрокаПоиска, Новый РегулярноеВыражение(СтрокаПоиска));
	КонецЦикла;

	// поиск
	Для Каждого ОписаниеФайла Из КоллекцияФайловДляАнализа Цикл
		//
		ВременныйКаталог = ОписаниеФайла.Получить("ВременныйКаталог");
		ИмяФайлаДоВременногоКаталога = ОписаниеФайла.Получить("ИмяФайлаДоВременногоКаталога");
		//
		ЧтениеТекстовогоФайла = Новый ЧтениеТекста(ВременныйКаталог + "/" + ИмяФайлаДоВременногоКаталога, КодировкаТекста.UTF8);
		НомерСтроки = 1;
		ТекущийМетод = "";
		ТекущаяОбласть = "";
		ОчереднаяСтрока = ЧтениеТекстовогоФайла.ПрочитатьСтроку();
		Пока ОчереднаяСтрока <> Неопределено Цикл
			// определяем текущую область и метод
			ОчереднаяСтрокаНРег = НРег(ОчереднаяСтрока);
			Если СтрНайти(ОчереднаяСтрокаНРег, "#область") > 0 Тогда
				ТекущаяОбласть = Прав(ОчереднаяСтрока, СтрДлина(ОчереднаяСтрока) - 9);
			КонецЕсли;
			Если СтрНайти(ОчереднаяСтрокаНРег, "#конецобласти") > 0 Тогда
				ТекущаяОбласть = "";
			КонецЕсли;
			Если СтрНайти(ОчереднаяСтрокаНРег, "функция ") > 0 Тогда
				ТекущийМетод = Прав(ОчереднаяСтрока, СтрДлина(ОчереднаяСтрока) - 8);
				ПозицияСкобки = СтрНайти(ТекущийМетод, "(");
				Если ПозицияСкобки > 0 Тогда
					ТекущийМетод = Лев(ТекущийМетод, ПозицияСкобки - 1);
				КонецЕсли;
			КонецЕсли;
			Если СтрНайти(ОчереднаяСтрокаНРег, "процедура ") > 0 Тогда
				ТекущийМетод = Прав(ОчереднаяСтрока, СтрДлина(ОчереднаяСтрока) - 10);
				ПозицияСкобки = СтрНайти(ТекущийМетод, "(");
				Если ПозицияСкобки > 0 Тогда
					ТекущийМетод = Лев(ТекущийМетод, ПозицияСкобки - 1);
				КонецЕсли;
			КонецЕсли;
			Если СтрНайти(ОчереднаяСтрокаНРег, "конецфункции") > 0 ИЛИ СтрНайти(ОчереднаяСтрокаНРег, "конецпроцедуры") > 0 Тогда
				ТекущийМетод = "";
			КонецЕсли;
			// теперь проверяем строки поиска
			Для Каждого ЭлементСоответствия Из СоответствиеРегулярныхВыражений Цикл
				НайденныеСовпадения = ЭлементСоответствия.Значение.НайтиСовпадения(ОчереднаяСтрока);
				Для Каждого НайденноеСовпадение Из НайденныеСовпадения Цикл
					// упакуем в иерархию
					СоответствиеФайла = Результат.Получить(ИмяФайлаДоВременногоКаталога);
					Если СоответствиеФайла = Неопределено Тогда
						СоответствиеФайла = Новый Соответствие;
					КонецЕсли;

					СоответствиеОбласти = СоответствиеФайла.Получить(ТекущаяОбласть);
					Если СоответствиеОбласти = Неопределено Тогда
						СоответствиеОбласти = Новый Соответствие;
					КонецЕсли;

					МассивМетода = СоответствиеОбласти.Получить(ТекущийМетод);
					Если МассивМетода = Неопределено Тогда
						МассивМетода = Новый Массив;
					КонецЕсли;

					СоответствиеРезультата = Новый Соответствие;
					СоответствиеРезультата.Вставить("НомерСтроки", НомерСтроки);
					СоответствиеРезультата.Вставить("НомерСимвола", НайденноеСовпадение.Индекс);
					СоответствиеРезультата.Вставить("СтрокаПоиска", ЭлементСоответствия.Ключ);

					МассивМетода.Добавить(СоответствиеРезультата);
					СоответствиеОбласти.Вставить(ТекущийМетод, МассивМетода);
					СоответствиеФайла.Вставить(ТекущаяОбласть, СоответствиеОбласти);
					Результат.Вставить(ИмяФайлаДоВременногоКаталога, СоответствиеФайла);
				КонецЦикла;
			КонецЦикла;

			ОчереднаяСтрока = ЧтениеТекстовогоФайла.ПрочитатьСтроку();
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		ЧтениеТекстовогоФайла.Закрыть();
	КонецЦикла;

	// помещение результата в файл
	Если ЗначениеЗаполнено(ФайлРезультатаПроцесса) Тогда
		ОбщиеМетоды.ЗаписатьФайлJSON(ФайлРезультатаПроцесса, Результат);
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

ОбщиеМетоды = ЗагрузитьСценарий(ТекущийСценарий().Каталог + "/commonmethods.os");

Если СтартовыйСценарий().Источник = ТекущийСценарий().Источник Тогда
	ПриСозданииОбъекта();
	Инициализация();
	Если Не ДанныеКорректны Тогда
		ЗавершитьРаботу(1);
	КонецЕсли;
	РезультатПоиска = ПоискВФайлахПоШаблону();
	ЗавершитьРаботу(0);
КонецЕсли;
